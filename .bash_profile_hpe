####################
#   HPE SPECIFIC   #
####################

# Corporate proxy
CORP_PROXY="web-proxy.houston.hpecorp.net:8080"

# Enables proxy based on the given configuration for APT
function apt_proxy_on() {
   if [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
      sudo tee /etc/apt/apt.conf > /dev/null <<EOF
      Acquire::http::proxy "http://$CORP_PROXY";
      Acquire::https::proxy "http://$CORP_PROXY";
      Acquire::ftp::proxy "http://$CORP_PROXY";
EOF
   fi

}

# Disable APT proxy
function apt_proxy_off {
   if [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
      echo "" | sudo tee /etc/apt/apt.conf > /dev/null
   fi
}

# configure proxy for git while on corporate network
function proxy_on(){
   # on Windows env vars are UPPERCASE even in git bash
   export {HTTP,HTTPS,FTP,ALL}_PROXY="$CORP_PROXY"
   export {http,https,ftp,all}_proxy="$CORP_PROXY"

   export NO_PROXY="localhost,127.0.0.1,$USERDNSDOMAIN,192.168.99.100"

   # optional for debugging
   # export GIT_CURL_VERBOSE=1

   # optional Self Signed SSL certs and
   # internal CA certificate in an corporate environment
   export GIT_SSL_NO_VERIFY=1

   # Add proxy to apt
   apt_proxy_on

   # env | grep -e _PROXY -e GIT_ | sort
   echo -e "Proxy-related environment variables set."
}

# remove proxy settings when off corporate network
function proxy_off(){
   variables=( \
      "PASSWORD" "PROXY_SERVER" "PROXY_PORT" \
      "HTTP_PROXY" "HTTPS_PROXY" "FTP_PROXY" "ALL_PROXY" \
      "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" \
      "NO_PROXY" "GIT_CURL_VERBOSE" "GIT_SSL_NO_VERIFY" \
      )

   for i in "${variables[@]}"
   do
      unset $i
   done

   # Remove proxy to apt
   apt_proxy_off

   # env | grep -e _PROXY -e GIT_ | sort
   echo -e "Proxy-related environment variables removed."
}

# This enables proxy by default every time the shell opens
# to disable, just run "proxy_off"
proxy_on
